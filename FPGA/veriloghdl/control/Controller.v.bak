module Controller (
    input           clk,
    input           reset,
    input           start,
    input           done,
    output reg      enable,
    output reg      wr_en
);

    localparam S_IDLE    = 2'b00;
    localparam S_PROCESS = 2'b01;
    localparam S_FINISH  = 2'b10;

    reg [1:0] current_state, next_state;

    always @(posedge clk or posedge reset) begin
        if (reset)
            current_state <= S_IDLE;
        else
            current_state <= next_state;
    end

    always @(*) begin
        next_state = current_state;
        case(current_state)
            S_IDLE:
                if (start) next_state = S_PROCESS;
            S_PROCESS:
                if (done) next_state = S_FINISH;
            S_FINISH:
                next_state = S_IDLE;
        endcase
    end

    always @(*) begin
        enable = 1'b0;
        wr_en  = 1'b0;
        case(current_state)
            S_PROCESS:
                enable = 1'b1;
        endcase
    end
endmodule